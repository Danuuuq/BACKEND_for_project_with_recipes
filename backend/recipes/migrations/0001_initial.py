<<<<<<< HEAD
# Generated by Django 5.1.3 on 2024-11-20 13:59
=======
# Generated by Django 5.1.3 on 2024-11-20 18:23
>>>>>>> 1fcfa77 (back stable version)

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

<<<<<<< HEAD
    dependencies = []
=======
    dependencies = [
    ]
>>>>>>> 1fcfa77 (back stable version)

    operations = [
        migrations.CreateModel(
            name="Ingredient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128, verbose_name="название")),
                (
                    "measurement_unit",
                    models.CharField(max_length=64, verbose_name="мера измерения"),
                ),
            ],
            options={
                "verbose_name": "ингредиент",
                "verbose_name_plural": "Ингредиенты",
                "ordering": ("name", "id"),
                "default_related_name": "ingredient",
            },
        ),
        migrations.CreateModel(
            name="Recipe",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "short_url",
                    models.CharField(
                        auto_created=True, max_length=6, verbose_name="Короткая ссылка"
                    ),
                ),
                ("name", models.CharField(max_length=256, verbose_name="название")),
                ("text", models.TextField(verbose_name="описание")),
                (
                    "image",
                    models.ImageField(
                        upload_to="recipes/images/", verbose_name="изображение"
                    ),
                ),
                (
                    "cooking_time",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="время готовки",
                    ),
                ),
            ],
            options={
                "verbose_name": "рецепт",
                "verbose_name_plural": "Рецепты",
                "ordering": ("name", "id"),
                "default_related_name": "recipes",
            },
        ),
        migrations.CreateModel(
            name="RecipeIngredient",
            fields=[
<<<<<<< HEAD
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amount",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="количество",
                    ),
                ),
            ],
            options={
                "verbose_name": "ингридиенты рецепта",
                "verbose_name_plural": "Ингридиенты рецептов",
                "ordering": ("recipe", "ingredient"),
            },
        ),
        migrations.CreateModel(
            name="RecipeTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "тег рецепта",
                "verbose_name_plural": "Теги рецептов",
                "ordering": ("recipe", "tag"),
=======
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_url', models.CharField(auto_created=True, max_length=6, verbose_name='Короткая ссылка')),
                ('name', models.CharField(max_length=256, verbose_name='название')),
                ('text', models.TextField(verbose_name='описание')),
                ('image', models.ImageField(upload_to='recipes/images/', verbose_name='изображение')),
                ('cooking_time', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='время готовки')),
            ],
            options={
                'verbose_name': 'рецепт',
                'verbose_name_plural': 'Рецепты',
                'ordering': ('name', 'id'),
                'default_related_name': 'recipes',
            },
        ),
        migrations.CreateModel(
            name='RecipeIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='количество')),
            ],
            options={
                'verbose_name': 'ингридиенты рецепта',
                'verbose_name_plural': 'Ингридиенты рецептов',
                'ordering': ('recipe', 'ingredient'),
>>>>>>> 1fcfa77 (back stable version)
            },
        ),
        migrations.CreateModel(
            name='RecipeTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'тег рецепта',
                'verbose_name_plural': 'Теги рецептов',
                'ordering': ('recipe', 'tag'),
            },
        ),
    ]
